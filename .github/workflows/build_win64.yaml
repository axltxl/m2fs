name: Build/release on Windows
on:
  push:
    branches:
      - main #
defaults:
  run:
    shell: powershell
jobs:
  build:
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: paulhatch/semantic-version@v4.0.2
        name: Create new version number
        id: version
        with:
          bump_each_commit: true
          tag_prefix: "v"

      - name: Install build toolchain
        run: |
          choco install python --version 3.11.0

          Update-SessionEnvironment

          pip install --upgrade pip setuptools build
          pip install pyinstaller pipenv

          python --version
          pip --version
          pipenv --version
          pyinstaller --version

      - name: Install dependencies
        run: |
          pipenv requirements | Out-File requirements.txt
          pip install -r .\requirements.txt
          rm .\requirements.txt

      - name: git tag
        id: git-tag
        run: |
          git tag ${{ steps.version.outputs.version_tag }}
          git checkout ${{ steps.version.outputs.version_tag }}

      - name: Build package (setuptools)
        run: |
          python -m build

      - name: Build and try to run executable (pyinstaller)
        run: |

          pyinstaller .\m2fs.spec

          .\dist\m2fs\m2fs --help

      - name: Zip the Windows executable
        uses: vimtor/action-zip@v1
        with:
          files: dist/m2fs
          recursive: false
          dest: dist/m2fs-${{ steps.version.outputs.version_tag }}-win64-standalone.zip

      - name: Clean up pyinstaller dist before release
        run: |
          Remove-Item -Recurse -Force .\dist\m2fs

      - name: Create GitHub release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          git push origin ${{ steps.version.outputs.version_tag }}
          gh release create ${{ steps.version.outputs.version_tag }} (get-item .\dist\*)
